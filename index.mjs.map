{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32';\nimport floorf from '@stdlib/math-base-special-floorf';\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\nimport isNegativeZerof from '@stdlib/math-base-assert-is-negative-zerof';\n\n\n// MAIN //\n\n/**\n* Rounds a single-precision floating-point number to the nearest integer.\n*\n* @param {number} x - input value\n* @returns {number} output value\n*\n* @example\n* var v = roundf( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = roundf( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = roundf( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = roundf( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = roundf( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = roundf( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = roundf( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = roundf( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = roundf( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = roundf( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = roundf( NaN );\n* // returns NaN\n*/\nfunction roundf( x ) {\n\tif ( isnanf( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( isNegativeZerof( x ) || ( x >= -0.5 && x < 0.0 ) ) {\n\t\treturn -0.0; // -0\n\t}\n\tif ( x > 0.0 && x < 0.5 ) {\n\t\treturn 0.0; // 0\n\t}\n\n\t// If the magnitude is big enough, there's no place for the fraction part. If we try to add 0.5 to this number, 1.0 will be added instead...\n\tif ( x >= 8388608.0 || x <= -8388608.0 ) {\n\t\treturn x;\n\t}\n\treturn floorf( float64ToFloat32( x + 0.5 ) );\n}\n\n\n// EXPORTS //\n\nexport default roundf;\n"],"names":["roundf","x","isnanf","NaN","isNegativeZerof","floorf","float64ToFloat32"],"mappings":";;4ZAgFA,SAASA,EAAQC,GAChB,OAAKC,EAAQD,GACLE,IAEHC,EAAiBH,IAASA,IAAM,IAAOA,EAAI,GACvC,EAEJA,EAAI,GAAOA,EAAI,GACZ,EAIHA,GAAK,SAAaA,IAAM,QACrBA,EAEDI,EAAQC,EAAkBL,EAAI,IACtC"}